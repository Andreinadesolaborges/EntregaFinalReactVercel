{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, doc, addDoc, getDoc, getDocs, updateDoc, deleteDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: \"proyecto-react-75934.firebaseapp.com\",\n  projectId: \"proyecto-react-75934\",\n  storageBucket: \"proyecto-react-75934.appspot.com\",\n  messagingSenderId: \"350681035198\",\n  appId: \"1:350681035198:web:b3e9dbeb9c2b714f84c9ef\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(); //Consultar BDD\n\nexport const cargarBDD = async () => {\n  const promise = await fetch('./json/productos.json');\n  const productos = await promise.json();\n  productos.forEach(async prod => {\n    await addDoc(collection(db, \"productos\"), {\n      idCategoria: prod.idCategoria,\n      nombreCategoria: prod.nombreCategoria,\n      nombre: prod.nombre,\n      descripcion: prod.descripcion,\n      precio: prod.precio,\n      stock: prod.stock,\n      img: prod.img\n    });\n  });\n};\nexport const getProductos = async () => {\n  const productos = await getDocs(collection(db, \"productos\"));\n  const items = productos.docs.map(prod => {\n    return {\n      ...prod.data(),\n      id: prod.id\n    };\n  });\n  return items;\n};\nexport const getProducto = async id => {\n  const producto = await getDoc(doc(db, \"productos\", id));\n  const item = {\n    ...producto.data(),\n    id: producto.id\n  };\n  return item;\n};\nexport const updateProducto = async (id, info) => {\n  await updateDoc(doc(db, \"productos\", id), info);\n};\nexport const deleteProducto = async id => {\n  await deleteDoc(doc(db, \"productos\", id));\n};\nexport const createOrdenCompra = async (cliente, productos, precioTotal, fecha) => {\n  const ordenCompra = await addDoc(collection(db, \"ordenCompra\"), {\n    datosCliente: cliente,\n    productos: productos,\n    precioTotal: precioTotal,\n    fecha: fecha\n  });\n  return ordenCompra;\n};\nexport const getOrdenCompra = async id => {\n  const ordenCompra = await getDoc(doc(db, \"ordenCompra\", id));\n  const oCompra = {\n    ...ordenCompra.data(),\n    id: ordenCompra.id\n  };\n  return oCompra;\n};\nexport const createConsultaContact = async (contacto, fecha) => {\n  const consulta = await addDoc(collection(db, \"consulta\"), {\n    contacto: contacto,\n    fecha: fecha\n  });\n};","map":{"version":3,"names":["initializeApp","getFirestore","collection","doc","addDoc","getDoc","getDocs","updateDoc","deleteDoc","firebaseConfig","apiKey","process","env","API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","app","db","cargarBDD","promise","fetch","productos","json","forEach","prod","idCategoria","nombreCategoria","nombre","descripcion","precio","stock","img","getProductos","items","docs","map","data","id","getProducto","producto","item","updateProducto","info","deleteProducto","createOrdenCompra","cliente","precioTotal","fecha","ordenCompra","datosCliente","getOrdenCompra","oCompra","createConsultaContact","contacto","consulta"],"sources":["/Users/andreinadesola/Desktop/React curso/vercel/src/firebase/firebase.js"],"sourcesContent":["\nimport { initializeApp } from \"firebase/app\";\nimport {getFirestore, collection, doc, addDoc, getDoc, getDocs, updateDoc, deleteDoc} from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.API_KEY,\n  authDomain: \"proyecto-react-75934.firebaseapp.com\",\n  projectId: \"proyecto-react-75934\",\n  storageBucket: \"proyecto-react-75934.appspot.com\",\n  messagingSenderId: \"350681035198\",\n  appId: \"1:350681035198:web:b3e9dbeb9c2b714f84c9ef\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(); //Consultar BDD\n\nexport const cargarBDD = async () => {\n    const promise = await fetch('./json/productos.json');\n    const productos = await promise.json ();\n    productos.forEach(async (prod) => {\n        await addDoc(collection(db, \"productos\"), {\n\n            idCategoria: prod.idCategoria,\n            nombreCategoria: prod.nombreCategoria,\n            nombre: prod.nombre,\n            descripcion: prod.descripcion,\n            precio: prod.precio,\n            stock: prod.stock,\n            img: prod.img\n\n        })\n    })\n}\n\nexport const getProductos = async () => {\n    const productos = await getDocs(collection(db, \"productos\"));\n    const items = productos.docs.map(prod => {\n        return {...prod.data(), id: prod.id}\n    })\n    return items\n}\n\nexport const getProducto  = async(id) =>{\n    const producto = await getDoc(doc(db, \"productos\", id))\n    const item = {...producto.data(), id: producto.id}\n    return item\n}\n\nexport const updateProducto = async(id, info) => {\n    await updateDoc (doc(db, \"productos\", id), info)\n}\n\nexport const deleteProducto = async(id) => {\n    await deleteDoc (doc(db, \"productos\", id))\n}\n\nexport const createOrdenCompra = async(cliente, productos, precioTotal, fecha) => {\n    const ordenCompra = await addDoc(collection(db, \"ordenCompra\"), {\n        datosCliente: cliente,\n        productos: productos,\n        precioTotal: precioTotal,\n        fecha: fecha\n    })\n    return ordenCompra\n}\n\nexport const getOrdenCompra  = async(id) =>{\n    const ordenCompra = await getDoc(doc(db, \"ordenCompra\", id))\n    const oCompra = {...ordenCompra.data(), id: ordenCompra.id}\n    return oCompra\n}\n\nexport const createConsultaContact = async(contacto, fecha) => {\n    const consulta = await addDoc(collection(db, \"consulta\"), {\n        contacto: contacto,\n        fecha: fecha\n    })\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}